{"version":3,"file":"index.js","sources":["../../src/errors.ts","../../src/connectors/ConnectorFortmatic.ts","../../src/connectors/ConnectorFrame.ts","../../src/connectors/ConnectorInjected.ts","../../src/connectors/ConnectorPortis.ts","../../src/connectors/ConnectorProvided.ts","../../src/connectors/ConnectorTorus.ts","../../src/connectors/ConnectorWalletConnect.ts","../../src/connectors/ConnectorWalletLink.ts","../../src/connectors/ConnectorLedger.ts","../../node_modules/regenerator-runtime/runtime.js","../../src/chains.ts","../../src/utils.ts","../../src/images/Cipher.png","../../src/images/Fortmatic.svg","../../src/images/Frame.png","../../src/images/Metamask.png","../../src/images/Portis.svg","../../src/images/Status.png","../../src/images/wallet.svg","../../src/images/walletconnect.png","../../src/providers/index.tsx","../../src/index.tsx","../../src/hooks/walletBalance.tsx","../../src/hooks/watchBlockNumber.tsx","../../src/connectors.ts"],"sourcesContent":["export class ChainUnsupportedError extends Error {\r\n  constructor(message: string, ...params: any[]) {\r\n    super(...params)\r\n    this.name = 'ChainUnsupportedError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nexport class ChainUnknownError extends Error {\r\n  constructor(message: string, ...params: any[]) {\r\n    super(...params)\r\n    this.name = 'ChainUnknownError'\r\n    this.message = message\r\n  }\r\n}\r\n\r\nexport class ConnectorUnsupportedError extends Error {\r\n  constructor(connectorId: string, ...params: any[]) {\r\n    super(...params)\r\n    this.name = 'ConnectorUnsupportedError'\r\n    this.message = `Unsupported connector: ${connectorId}.`\r\n  }\r\n}\r\n\r\nexport class ConnectionRejectedError extends Error {\r\n  constructor(...params: any[]) {\r\n    super(...params)\r\n    this.name = 'ConnectionRejectedError'\r\n    this.message = `The activation has been rejected by the provider.`\r\n  }\r\n}\r\n\r\nexport class ConnectorConfigError extends Error {\r\n  constructor(...params: any[]) {\r\n    super(...params)\r\n    this.name = 'ConnectorConfigError'\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\nimport { ConnectorConfigError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { FortmaticConnector } = await import('@web3-react/fortmatic-connector')\r\n  return {\r\n    web3ReactConnector({\r\n      chainId,\r\n      apiKey,\r\n    }: {\r\n      chainId: number\r\n      apiKey: string\r\n    }) {\r\n      if (!apiKey) {\r\n        throw new ConnectorConfigError(\r\n          'The Fortmatic connector requires apiKey to be set.'\r\n        )\r\n      }\r\n      return new FortmaticConnector({ apiKey, chainId })\r\n    },\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\nimport { ConnectionRejectedError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { FrameConnector, UserRejectedRequestError } = await import(\r\n    '@web3-react/frame-connector'\r\n  )\r\n  return {\r\n    web3ReactConnector({ chainId }: { chainId: number }) {\r\n      return new FrameConnector({ supportedChainIds: [chainId] })\r\n    },\r\n    handleActivationError(err: Error) {\r\n      if (err instanceof UserRejectedRequestError) {\r\n        return new ConnectionRejectedError()\r\n      }\r\n      if (err.message.startsWith('JSON.parse')) {\r\n        return new Error(\r\n          'There seems to be an issue when trying to connect to Frame.'\r\n        )\r\n      }\r\n      return null\r\n    },\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\nimport { ConnectionRejectedError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { InjectedConnector, UserRejectedRequestError } = await import(\r\n    '@web3-react/injected-connector'\r\n  )\r\n  return {\r\n    web3ReactConnector({ chainId }: { chainId: number[] }) {\r\n      return new InjectedConnector({ supportedChainIds: chainId })\r\n    },\r\n    handleActivationError(err: Error) {\r\n      return err instanceof UserRejectedRequestError\r\n        ? new ConnectionRejectedError()\r\n        : null\r\n    },\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\nimport { ConnectorConfigError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { PortisConnector } = await import('@web3-react/portis-connector')\r\n  return {\r\n    web3ReactConnector({\r\n      chainId,\r\n      dAppId,\r\n    }: {\r\n      chainId: number[]\r\n      dAppId: string\r\n    }) {\r\n      if (!dAppId) {\r\n        throw new ConnectorConfigError(\r\n          'The Portis connector requires dAppId to be set.'\r\n        )\r\n      }\r\n      return new PortisConnector({ dAppId, networks: chainId })\r\n    },\r\n  }\r\n}\r\n","import { Connector, EthereumProvider } from '../types'\r\nimport { ConnectionRejectedError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { ProvidedConnector, UserRejectedRequestError } = await import(\r\n    '@aragon/provided-connector'\r\n  )\r\n  return {\r\n    web3ReactConnector({\r\n      chainId,\r\n      provider,\r\n    }: {\r\n      chainId: number[]\r\n      provider: EthereumProvider\r\n    }) {\r\n      return new ProvidedConnector({\r\n        provider,\r\n        supportedChainIds: chainId,\r\n      })\r\n    },\r\n    handleActivationError(err: Error) {\r\n      return err instanceof UserRejectedRequestError\r\n        ? new ConnectionRejectedError()\r\n        : null\r\n    },\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { TorusConnector } = await import('@web3-react/torus-connector')\r\n  return {\r\n    web3ReactConnector({\r\n      chainId,\r\n      initOptions,\r\n      constructorOptions,\r\n    }: {\r\n      chainId: number\r\n      initOptions: any\r\n      constructorOptions: any\r\n    }) {\r\n      return new TorusConnector({ chainId, constructorOptions, initOptions })\r\n    },\r\n  }\r\n}\r\n","import { Connector, RpcData } from '../types'\r\nimport { ConnectionRejectedError, ConnectorConfigError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { UserRejectedRequestError, WalletConnectConnector } = await import(\r\n    '@web3-react/walletconnect-connector'\r\n  )\r\n  return {\r\n    web3ReactConnector({\r\n      rpc,\r\n      bridge,\r\n      pollingInterval,\r\n    }: {\r\n      rpc: RpcData\r\n      bridge: any\r\n      pollingInterval: number\r\n    }) {\r\n      if (!rpc) {\r\n        throw new ConnectorConfigError(\r\n          'The WalletConnect connector requires rpcUrl to be set.'\r\n        )\r\n      }\r\n      Object.values(rpc).forEach((url: string) => {\r\n        if (!/^https?:\\/\\//.test(url)) {\r\n          throw new ConnectorConfigError(\r\n            'The WalletConnect connector requires rpcUrl to be an HTTP URL.'\r\n          )\r\n        }\r\n        return\r\n      })\r\n      return new WalletConnectConnector({\r\n        bridge,\r\n        pollingInterval,\r\n        qrcode: true,\r\n        rpc,\r\n      })\r\n    },\r\n    handleActivationError(err: Error) {\r\n      return err instanceof UserRejectedRequestError\r\n        ? new ConnectionRejectedError()\r\n        : null\r\n    },\r\n  }\r\n}\r\n","import 'regenerator-runtime/runtime.js'\r\nimport { Connector } from '../types'\r\nimport { ConnectorConfigError } from '../errors'\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { WalletLinkConnector } = await import(\r\n    '@web3-react/walletlink-connector'\r\n  )\r\n  return {\r\n    web3ReactConnector({\r\n      chainId,\r\n      url,\r\n      appName,\r\n      appLogoUrl,\r\n    }: {\r\n      chainId: number\r\n      url: string\r\n      appName: string\r\n      appLogoUrl: string\r\n    }) {\r\n      if (chainId !== 1) {\r\n        throw new ConnectorConfigError(\r\n          'The WalletLink connector requires chainId to be 1.'\r\n        )\r\n      }\r\n      if (!/^https?:\\/\\//.test(url)) {\r\n        throw new ConnectorConfigError(\r\n          'The WalletLink connector requires url to be an HTTP URL.'\r\n        )\r\n      }\r\n      return new WalletLinkConnector({ url, appName, appLogoUrl })\r\n    },\r\n  }\r\n}\r\n","import { Connector } from '../types'\r\nimport { ConnectorConfigError } from '../errors'\r\n\r\n// NOTE: The ledger live path specify which chain and which account is used\r\n// on the hardware wallet. This should eventually be made dynamic.\r\nconst LEDGER_LIVE_PATH = \"m/44'/60'/0'/0\"\r\nconst POLLING_INTERVAL = 12000\r\n\r\nexport default async function init(): Promise<Connector> {\r\n  const { LedgerConnector } = await import('@web3-react/ledger-connector')\r\n  return {\r\n    web3ReactConnector({ chainId, url }: { chainId: number; url: string }) {\r\n      if (!url) {\r\n        throw new ConnectorConfigError(\r\n          'The Ledger connector requires url to be set.'\r\n        )\r\n      }\r\n      return new LedgerConnector({\r\n        url,\r\n        chainId,\r\n        pollingInterval: POLLING_INTERVAL,\r\n        baseDerivationPath: LEDGER_LIVE_PATH,\r\n      })\r\n    },\r\n  }\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { ChainUnknownError } from './errors'\r\nimport { ChainInformation, ChainType, Currency } from './types'\r\n\r\nconst ETH: Currency = {\r\n  name: 'Ether',\r\n  symbol: 'ETH',\r\n  decimals: 18,\r\n}\r\n\r\nconst MATIC: Currency = {\r\n  name: 'Matic Token',\r\n  symbol: 'MATIC',\r\n  decimals: 18,\r\n}\r\n\r\nconst AVAX: Currency = {\r\n  name: 'Avax',\r\n  symbol: 'AVAX',\r\n  decimals: 9,\r\n}\r\n\r\nconst ONE: Currency = {\r\n  name: 'ONE Token',\r\n  symbol: 'ONE',\r\n  decimals: 18,\r\n}\r\n\r\nconst XDAI: Currency = {\r\n  name: 'xDAI',\r\n  symbol: 'xDAI',\r\n  decimals: 18,\r\n}\r\n\r\nconst BNB: Currency = {\r\n  name: 'Binance Token',\r\n  symbol: 'BNB',\r\n  decimals: 18,\r\n}\r\n\r\nconst TT: Currency = {\r\n  name: 'Thunder Token',\r\n  symbol: 'TT',\r\n  decimals: 18,\r\n}\r\n\r\nconst CELO: Currency = {\r\n  name: 'Celo',\r\n  symbol: 'CELO',\r\n  decimals: 18,\r\n}\r\n\r\nconst METIS: Currency = {\r\n  name: 'METIS',\r\n  symbol: 'METIS',\r\n  decimals: 18,\r\n}\r\n\r\nconst FTM: Currency = {\r\n  name: 'FTM',\r\n  symbol: 'FTM',\r\n  decimals: 18,\r\n}\r\n\r\nconst DEV: Currency = {\r\n  name: 'DEV',\r\n  symbol: 'DEV',\r\n  decimals: 18,\r\n}\r\nconst MOVR: Currency = {\r\n  name: 'Moonriver',\r\n  symbol: 'MOVR',\r\n  decimals: 18,\r\n}\r\nconst GLMR: Currency = {\r\n  name: 'Glimmer',\r\n  symbol: 'GLMR',\r\n  decimals: 18,\r\n}\r\nconst HECO: Currency = {\r\n  name: 'HECO',\r\n  symbol: 'HT',\r\n  decimals: 18,\r\n}\r\nconst EVMOS: Currency = {\r\n  name: 'EVMOS',\r\n  symbol: 'EVMOS',\r\n  decimals: 18,\r\n}\r\n\r\nconst CHAIN_INFORMATION = new Map<number, ChainInformation | ChainType>([\r\n  [\r\n    1,\r\n    {\r\n      id: 1,\r\n      nativeCurrency: ETH,\r\n      type: 'main',\r\n      fullName: 'Ethereum Mainnet',\r\n      shortName: 'Ethereum',\r\n      explorerUrl: `https://etherscan.io`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    3,\r\n    {\r\n      id: 3,\r\n      nativeCurrency: ETH,\r\n      type: 'ropsten',\r\n      fullName: 'Ropsten Testnet',\r\n      shortName: 'Ropsten',\r\n      explorerUrl: `https://ropsten.etherscan.io`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    4,\r\n    {\r\n      id: 4,\r\n      nativeCurrency: ETH,\r\n      type: 'rinkeby',\r\n      fullName: 'Rinkeby Testnet',\r\n      shortName: 'Rinkeby',\r\n      explorerUrl: `https://rinkeby.etherscan.io`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    5,\r\n    {\r\n      id: 5,\r\n      nativeCurrency: ETH,\r\n      type: 'goerli',\r\n      fullName: 'Goerli Testnet',\r\n      shortName: 'Goerli',\r\n      explorerUrl: `https://goerli.etherscan.io`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    42,\r\n    {\r\n      id: 42,\r\n      nativeCurrency: ETH,\r\n      type: 'kovan',\r\n      fullName: 'Kovan Testnet',\r\n      shortName: 'Kovan',\r\n      explorerUrl: `https://kovan.etherscan.io`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    43112,\r\n    {\r\n      id: 43112,\r\n      nativeCurrency: AVAX,\r\n      type: 'avalocal',\r\n      shortName: 'Avalanche Local',\r\n      fullName: 'Avalanche Local',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    43113,\r\n    {\r\n      id: 43113,\r\n      nativeCurrency: AVAX,\r\n      type: 'fuji',\r\n      fullName: 'Avalanche Fuji',\r\n      shortName: 'Fuji',\r\n      explorerUrl: 'https://testnet.snowtrace.io/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    43114,\r\n    {\r\n      id: 43114,\r\n      nativeCurrency: AVAX,\r\n      type: 'avalanche',\r\n      fullName: 'Avalanche Mainnet',\r\n      shortName: 'Avalanche',\r\n      explorerUrl: 'https://snowtrace.io/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    100,\r\n    {\r\n      id: 100,\r\n      nativeCurrency: XDAI,\r\n      type: 'xdai',\r\n      fullName: 'xDAI',\r\n      shortName: 'xDAI',\r\n      explorerUrl: 'https://blockscout.com/xdai/mainnet/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    137,\r\n    {\r\n      id: 137,\r\n      nativeCurrency: MATIC,\r\n      type: 'matic',\r\n      fullName: 'Polygon Mainnet',\r\n      shortName: 'Polygon',\r\n      explorerUrl: `https://polygonscan.com`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    80001,\r\n    {\r\n      id: 80001,\r\n      nativeCurrency: MATIC,\r\n      type: 'mumbai',\r\n      fullName: 'Mumbai Testnet',\r\n      shortName: 'Mumbai',\r\n      explorerUrl: `https://mumbai.polygonscan.com`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    250,\r\n    {\r\n      id: 250,\r\n      nativeCurrency: FTM,\r\n      type: 'fantom',\r\n      fullName: 'Fantom Opera Mainnet',\r\n      shortName: 'FTM',\r\n      explorerUrl: `https://ftmscan.com/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    4002,\r\n    {\r\n      id: 4002,\r\n      nativeCurrency: FTM,\r\n      type: 'fantom',\r\n      fullName: 'Fantom Opera Testnet',\r\n      shortName: 'FTM',\r\n      explorerUrl: `https://testnet.ftmscan.com/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    9000,\r\n    {\r\n      id: 9000,\r\n      nativeCurrency: EVMOS,\r\n      type: 'evmos',\r\n      fullName: 'Evmos Testnet',\r\n      shortName: 'EVMOS',\r\n      explorerUrl: `https://eth.bd.evmos.dev:8545`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    9001,\r\n    {\r\n      id: 9001,\r\n      nativeCurrency: EVMOS,\r\n      type: 'evmos',\r\n      fullName: 'Evmos mainnet',\r\n      shortName: 'EVMOS',\r\n      explorerUrl: `https://eth.bd.evmos.org:8545`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1666600000,\r\n    {\r\n      id: 1666600000,\r\n      nativeCurrency: ONE,\r\n      type: 'harmony',\r\n      fullName: 'Harmony ONE',\r\n      shortName: 'Harmony',\r\n      explorerUrl: `https://explorer.harmony.one/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1666700000,\r\n    {\r\n      id: 1666700000,\r\n      nativeCurrency: ONE,\r\n      type: 'harmonyTest',\r\n      fullName: 'Harmony ONE Testnet',\r\n      shortName: 'Harmony Testnet',\r\n      explorerUrl: `https://explorer.testnet.harmony.one/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    56,\r\n    {\r\n      id: 56,\r\n      nativeCurrency: BNB,\r\n      type: 'bsc',\r\n      fullName: 'Binance Smart Chain',\r\n      shortName: 'BSC',\r\n      explorerUrl: `https://bscscan.com/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    97,\r\n    {\r\n      id: 97,\r\n      nativeCurrency: BNB,\r\n      type: 'bscTest',\r\n      fullName: 'Binance Smart Chain Testnet',\r\n      shortName: 'BSC Testnet',\r\n      explorerUrl: `https://testnet.bscscan.com/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    108,\r\n    {\r\n      id: 108,\r\n      nativeCurrency: TT,\r\n      type: 'thundercore',\r\n      fullName: 'ThunderCore Mainnet',\r\n      shortName: 'ThunderCore',\r\n      explorerUrl: `https://scan.thundercore.com/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    18,\r\n    {\r\n      id: 18,\r\n      nativeCurrency: TT,\r\n      type: 'thundercoreTest',\r\n      fullName: 'ThunderCore Testnet',\r\n      shortName: 'ThunderCore Testnet',\r\n      explorerUrl: `https://scan-testnet.thundercore.com/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    421611,\r\n    {\r\n      id: 421611,\r\n      nativeCurrency: ETH,\r\n      type: 'arbitrumTest',\r\n      fullName: 'Arbitrum Testnet',\r\n      shortName: 'Arbitrum Testnet',\r\n      explorerUrl: 'https://testnet.arbiscan.io/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    42161,\r\n    {\r\n      id: 42161,\r\n      nativeCurrency: ETH,\r\n      type: 'arbitrum',\r\n      fullName: 'Arbitrum Mainnet',\r\n      shortName: 'Arbitrum',\r\n      explorerUrl: 'https://arbiscan.io/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    42220,\r\n    {\r\n      id: 42220,\r\n      nativeCurrency: CELO,\r\n      type: 'celo',\r\n      fullName: 'Celo (Mainnet)',\r\n      shortName: 'Celo',\r\n      explorerUrl: 'https://explorer.celo.org/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    44787,\r\n    {\r\n      id: 44787,\r\n      nativeCurrency: CELO,\r\n      type: 'celoTest',\r\n      fullName: 'Celo (Alfajores Testnet)',\r\n      shortName: 'Alfajores',\r\n      explorerUrl: 'https://alfajores-blockscout.celo-testnet.org/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    588,\r\n    {\r\n      id: 588,\r\n      nativeCurrency: METIS,\r\n      type: 'stardust',\r\n      fullName: 'Metis Stardust Testnet',\r\n      shortName: 'Stardust',\r\n      explorerUrl: 'https://stardust-explorer.metis.io/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    1088,\r\n    {\r\n      id: 1088,\r\n      nativeCurrency: METIS,\r\n      type: 'andromeda',\r\n      fullName: 'Metis Andromeda',\r\n      shortName: 'Andromeda',\r\n      explorerUrl: 'https://andromeda-explorer.metis.io/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1313161555,\r\n    {\r\n      id: 1313161555,\r\n      nativeCurrency: ETH,\r\n      type: 'aurora',\r\n      fullName: 'Aurora Testnet',\r\n      shortName: 'AuroraTest',\r\n      explorerUrl: 'https://explorer.testnet.aurora.dev/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    1313161554,\r\n    {\r\n      id: 1313161554,\r\n      nativeCurrency: ETH,\r\n      type: 'aurora',\r\n      fullName: 'Aurora Mainnet',\r\n      shortName: 'Aurora',\r\n      explorerUrl: 'https://explorer.mainnet.aurora.dev/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1287,\r\n    {\r\n      id: 1287,\r\n      nativeCurrency: DEV,\r\n      type: 'moonbase',\r\n      fullName: 'moonbase',\r\n      shortName: 'Moonbase Alphanet',\r\n      explorerUrl: 'https://moonbase.moonscan.io/',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    1285,\r\n    {\r\n      id: 1285,\r\n      nativeCurrency: MOVR,\r\n      type: 'moonriver',\r\n      fullName: 'Moonriver',\r\n      shortName: 'Moonriver',\r\n      explorerUrl: 'https://moonriver.moonscan.io/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1284,\r\n    {\r\n      id: 1284,\r\n      nativeCurrency: GLMR,\r\n      type: 'moonbeam',\r\n      fullName: 'Moonbeam',\r\n      shortName: 'Moonbeam',\r\n      explorerUrl: 'https://moonbeam.moonscan.io/',\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    1337,\r\n    {\r\n      id: 1337,\r\n      type: 'local',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    5777,\r\n    {\r\n      id: 5777,\r\n      type: 'ganache',\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    128,\r\n    {\r\n      id: 128,\r\n      nativeCurrency: HECO,\r\n      type: 'main',\r\n      fullName: 'HECO Mainnet',\r\n      shortName: 'HECO',\r\n      explorerUrl: `https://hecoscan.xyz/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    42161,\r\n    {\r\n      id: 42161,\r\n      nativeCurrency: ETH,\r\n      type: 'main',\r\n      fullName: 'Arbitrum',\r\n      shortName: 'Arbitrum',\r\n      explorerUrl: `https://arbiscan.io/`,\r\n      testnet: false,\r\n    },\r\n  ],\r\n  [\r\n    421613,\r\n    {\r\n      id: 421613,\r\n      nativeCurrency: ETH,\r\n      type: 'testnet',\r\n      fullName: 'Arbitrum Goerli Testnet',\r\n      shortName: 'Arbitrum',\r\n      explorerUrl: `https://goerli.arbiscan.io/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n  [\r\n    11155111,\r\n    {\r\n      id: 11155111,\r\n      nativeCurrency: ETH,\r\n      type: 'testnet',\r\n      fullName: 'Sepolia Testnet',\r\n      shortName: 'Sepolia',\r\n      explorerUrl: `https://sepolia.etherscan.io/`,\r\n      testnet: true,\r\n    },\r\n  ],\r\n])\r\n\r\n/**\r\n * This method checks whether a particular chain id is known.\r\n *\r\n * @param {number} chainId chain id to check\r\n * @returns {boolean} true if chain is known\r\n */\r\nexport function isKnownChain(chainId: number): boolean {\r\n  return CHAIN_INFORMATION.has(chainId)\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} chainId chain id to retrieve information for\r\n * @throws {ChainUnknownError} if chain is unknown\r\n * @returns {boolean} information for specified chain\r\n */\r\nexport function getChainInformation(\r\n  chainId: number\r\n): ChainInformation | ChainType {\r\n  const chainInfo = CHAIN_INFORMATION.get(chainId)\r\n  if (!chainInfo) throw new ChainUnknownError(`Unknown chain id: ${chainId}`)\r\n  return chainInfo\r\n}\r\n\r\n/**\r\n * This is a getter method to returns the chain ids of all known chains.\r\n *\r\n * @returns {number[]} array of chain Ids\r\n */\r\nexport function getKnownChainsIds(): number[] {\r\n  return Array.from(CHAIN_INFORMATION.keys())\r\n}\r\n\r\n/**\r\n * This is a getter method to return all information available for each known chain.\r\n *\r\n * @returns {ChainInformation | ChainType[]} An array containing information for\r\n * each known chain\r\n */\r\nexport function getKnownChainInformation(): ChainInformation | ChainType[] {\r\n  return Array.from(CHAIN_INFORMATION.values())\r\n}\r\n\r\nexport function getDefaultChainId(): number {\r\n  return 1\r\n}\r\n","import { Account, EthereumProvider, ChainInformation } from './types'\r\nimport { getChainInformation, getKnownChainsIds } from './chains'\r\n\r\nfunction isUnwrappedRpcResult(response: unknown): response is {\r\n  error?: string\r\n  result?: unknown\r\n} {\r\n  return (\r\n    typeof response === 'object' && response !== null && 'jsonrpc' in response\r\n  )\r\n}\r\n\r\nconst EXPLORER_URL_TYPES = new Map([\r\n  ['block', 'block'],\r\n  ['transaction', 'tx'],\r\n  ['address', 'address'],\r\n  ['token', 'token'],\r\n])\r\n\r\nexport const blockExplorerUrl = (\r\n  type: string,\r\n  value: string,\r\n  chainId: number\r\n) => {\r\n  if (!getKnownChainsIds().includes(chainId)) {\r\n    return ''\r\n  }\r\n\r\n  if (!EXPLORER_URL_TYPES.has(type)) {\r\n    throw new Error('type not supported.')\r\n  }\r\n\r\n  const domain = (getChainInformation(chainId) as ChainInformation).explorerUrl\r\n  const typePart = EXPLORER_URL_TYPES.get(type)\r\n  return `${domain}/${typePart}/${value}`\r\n}\r\n\r\nexport function rpcResult(response: unknown): unknown | null {\r\n  // Some providers don’t wrap the response\r\n  if (isUnwrappedRpcResult(response)) {\r\n    if (response.error) {\r\n      throw new Error(response.error)\r\n    }\r\n    return response.result || null\r\n  }\r\n\r\n  return response || null\r\n}\r\n\r\nasync function ethereumRequest(\r\n  ethereum: EthereumProvider,\r\n  method: string,\r\n  params: string[]\r\n): Promise<any> {\r\n  // If ethereum.request() exists, the provider is probably EIP-1193 compliant.\r\n  if (ethereum.request) {\r\n    return ethereum.request({ method, params }).then(rpcResult)\r\n  }\r\n\r\n  // This is specific to some older versions of MetaMask combined with Web3.js.\r\n  if (ethereum.sendAsync && ethereum.selectedAddress) {\r\n    return new Promise((resolve, reject) => {\r\n      ethereum.sendAsync(\r\n        {\r\n          method,\r\n          params,\r\n          from: ethereum.selectedAddress,\r\n          jsonrpc: '2.0',\r\n          id: 0,\r\n        },\r\n        (err: Error, result: any) => {\r\n          if (err) {\r\n            reject(err)\r\n          } else {\r\n            resolve(result)\r\n          }\r\n        }\r\n      )\r\n    }).then(rpcResult)\r\n  }\r\n\r\n  // If none of the previous two exist, we assume the provider is pre EIP-1193,\r\n  // using .send() rather than .request().\r\n  if (ethereum.send) {\r\n    return ethereum.send(method, params).then(rpcResult)\r\n  }\r\n\r\n  throw new Error(\r\n    'The Ethereum provider doesn’t seem to provide a request method.'\r\n  )\r\n}\r\n\r\nexport async function getAccountIsContract(\r\n  ethereum: EthereumProvider,\r\n  account: Account\r\n): Promise<boolean> {\r\n  try {\r\n    const code = await ethereumRequest(ethereum, 'eth_getCode', [account])\r\n    return code !== '0x'\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport async function getAccountBalance(\r\n  ethereum: EthereumProvider,\r\n  account: Account\r\n) {\r\n  return ethereumRequest(ethereum, 'eth_getBalance', [account, 'latest'])\r\n}\r\n\r\nexport async function getBlockNumber(ethereum: EthereumProvider) {\r\n  return ethereumRequest(ethereum, 'eth_blockNumber', [])\r\n}\r\n\r\nexport function pollEvery<R, T>(\r\n  fn: (\r\n    // As of TS 3.9, it doesn’t seem possible to specify dynamic params\r\n    // as a generic type (e.g. using `T` here). Instead, we have to specify an\r\n    // array in place (`T[]`), making it impossible to type params independently.\r\n    ...params: T[]\r\n  ) => {\r\n    request: () => Promise<R>\r\n    onResult: (result: R) => void\r\n  },\r\n  delay: number\r\n) {\r\n  let timer: any // can be TimeOut (Node) or number (web)\r\n  let stop = false\r\n  const poll = async (\r\n    request: () => Promise<R>,\r\n    onResult: (result: R) => void\r\n  ) => {\r\n    const result = await request()\r\n    if (!stop) {\r\n      onResult(result)\r\n      timer = setTimeout(poll.bind(null, request, onResult), delay)\r\n    }\r\n  }\r\n  return (...params: T[]) => {\r\n    const { request, onResult } = fn(...params)\r\n    stop = false\r\n    poll(request, onResult)\r\n    return () => {\r\n      stop = true\r\n      clearTimeout(timer)\r\n    }\r\n  }\r\n}\r\n\r\nconst ACCOUNT_KEY = 'LAST_ACTIVE_ACCOUNT'\r\nconst CONNECTOR_KEY = 'LAST_WALLET_CONNECTOR'\r\n\r\nexport const setLastActiveAccount = (account: Account) => {\r\n  localStorage?.setItem(ACCOUNT_KEY, account)\r\n}\r\n\r\nexport const clearLastActiveAccount = () => {\r\n  localStorage?.removeItem(ACCOUNT_KEY)\r\n}\r\n\r\nexport const getLastActiveAccount = (): Account | null => {\r\n  return localStorage?.getItem(ACCOUNT_KEY)\r\n}\r\n\r\nexport const setLastConnector = (connector: string) => {\r\n  localStorage?.setItem(CONNECTOR_KEY, connector)\r\n}\r\n\r\nexport const getLastConnector = (): string | null => {\r\n  return localStorage?.getItem(CONNECTOR_KEY)\r\n}\r\n","const img = require('./Cipher.png'); export default img;","const img = require('./Fortmatic.svg'); export default img;","const img = require('./Frame.png'); export default img;","const img = require('./Metamask.png'); export default img;","const img = require('./Portis.svg'); export default img;","const img = require('./Status.png'); export default img;","const img = require('./wallet.svg'); export default img;","const img = require('./walletconnect.png'); export default img;","import { Provider } from '../types'\r\nimport * as Images from '../images/index'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any\r\n  }\r\n}\r\n\r\nfunction isElectron() {\r\n  // See https://github.com/electron/electron/issues/2288\r\n  return (\r\n    typeof navigator === 'object' &&\r\n    typeof navigator.userAgent === 'string' &&\r\n    navigator.userAgent.indexOf('Electron') >= 0\r\n  )\r\n}\r\n\r\n// See the corresponding prop type, EthereumProviderType, in prop-types.js.\r\nconst PROVIDERS = new Map<string, Provider>(\r\n  [\r\n    {\r\n      id: 'frame',\r\n      name: 'Frame',\r\n      type: 'Desktop',\r\n      image: Images.Frame,\r\n      strings: {\r\n        'your Ethereum wallet': 'Frame',\r\n      },\r\n    },\r\n    {\r\n      id: 'metamask',\r\n      name: 'Metamask',\r\n      type: 'Desktop',\r\n      image: Images.Metamask,\r\n      strings: {\r\n        'your Ethereum wallet': 'Metamask',\r\n      },\r\n    },\r\n    {\r\n      id: 'status',\r\n      name: 'Status',\r\n      type: 'Mobile',\r\n      image: Images.Status,\r\n      strings: {\r\n        'your Ethereum wallet': 'Status',\r\n      },\r\n    },\r\n    {\r\n      id: 'cipher',\r\n      name: 'Cipher',\r\n      type: 'Mobile',\r\n      image: Images.Cipher,\r\n      strings: {\r\n        'your Ethereum wallet': 'Cipher',\r\n      },\r\n    },\r\n    {\r\n      id: 'fortmatic',\r\n      name: 'Fortmatic',\r\n      type: 'Any',\r\n      image: Images.Fortmatic,\r\n      strings: {\r\n        'your Ethereum wallet': 'Fortmatic',\r\n      },\r\n    },\r\n    {\r\n      id: 'portis',\r\n      name: 'Portis',\r\n      type: 'Any',\r\n      image: Images.Portis,\r\n      strings: {\r\n        'your Ethereum wallet': 'Portis',\r\n      },\r\n    },\r\n    {\r\n      id: 'walletconnect',\r\n      name: 'WalletConnect',\r\n      type: 'Any',\r\n      image: Images.walletconnect,\r\n      strings: {\r\n        'your Ethereum wallet': 'WalletConnect',\r\n      },\r\n    },\r\n    {\r\n      id: 'unknown',\r\n      name: 'Unknown',\r\n      type: 'Desktop',\r\n      image: Images.wallet,\r\n      strings: {\r\n        'your Ethereum wallet': 'your wallet',\r\n      },\r\n    },\r\n  ].map((provider) => [provider.id, provider])\r\n)\r\n\r\n// Get a providers object for a given ID.\r\nfunction getProvider(providerId: string): Provider | undefined {\r\n  return PROVIDERS.get(providerId)\r\n}\r\n\r\n// Get a string that depends on the current Ethereum provider.\r\n// The default string is used as an identifier (à la gettext).\r\nfunction getProviderString(string: string, providerId = 'unknown'): string {\r\n  const provider = getProvider(providerId)\r\n  return (provider && provider.strings[string]) || string\r\n}\r\n\r\n// Get an identifier for the provider, if it can be detected.\r\nfunction identifyProvider(provider: any) {\r\n  if (provider && isElectron()) {\r\n    return 'frame'\r\n  }\r\n  if (provider && provider.isMetaMask) {\r\n    return 'metamask'\r\n  }\r\n  return 'unknown'\r\n}\r\n\r\n// Get a provider from its useWallet() identifier.\r\nfunction getProviderFromUseWalletId(id: string) {\r\n  if (id === 'injected' || id === 'provided') {\r\n    return (\r\n      getProvider(identifyProvider(window.ethereum)) || getProvider('unknown')\r\n    )\r\n  }\r\n  return getProvider(id) || getProvider('unknown')\r\n}\r\n\r\nexport {\r\n  getProvider,\r\n  identifyProvider,\r\n  getProviderString,\r\n  getProviderFromUseWalletId,\r\n}\r\nexport default PROVIDERS\r\n","import type { ReactNode } from 'react'\r\nimport * as PropTypes from 'prop-types'\r\nimport * as React from 'react'\r\nimport {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport {\r\n  UnsupportedChainIdError,\r\n  Web3ReactProvider,\r\n  useWeb3React,\r\n} from '@web3-react/core'\r\n\r\nimport {\r\n  AccountType,\r\n  Connector,\r\n  ConnectorConfig,\r\n  Status,\r\n  Wallet,\r\n} from './types'\r\nimport { getConnectors } from './connectors'\r\nimport {\r\n  ConnectionRejectedError,\r\n  ChainUnsupportedError,\r\n  ConnectorUnsupportedError,\r\n} from './errors'\r\nimport {\r\n  getAccountIsContract,\r\n  blockExplorerUrl,\r\n  getLastActiveAccount,\r\n  clearLastActiveAccount,\r\n  setLastActiveAccount,\r\n  setLastConnector,\r\n  getLastConnector,\r\n} from './utils'\r\n\r\nimport {\r\n  getProviderFromUseWalletId,\r\n  getProviderString,\r\n} from './providers/index'\r\nimport * as chains from './chains'\r\nimport { useWatchBlockNumber } from './hooks/watchBlockNumber'\r\nimport { useWalletBalance } from './hooks/walletBalance'\r\n\r\ntype WalletContext = {\r\n  addBlockNumberListener: (callback: (blockNumber: number) => void) => void\r\n  pollBalanceInterval: number\r\n  pollBlockNumberInterval: number\r\n  removeBlockNumberListener: (callback: (blockNumber: number) => void) => void\r\n  wallet: Wallet\r\n} | null\r\n\r\nconst UseWalletContext = React.createContext<WalletContext>(null)\r\n\r\n// CONTEXT CONSUMER ============================================================\r\n\r\nfunction useWallet(): Wallet {\r\n  const walletContext = useContext(UseWalletContext)\r\n\r\n  if (walletContext === null) {\r\n    throw new Error(\r\n      'useWallet() can only be used inside of <UseWalletProvider />, ' +\r\n        'please declare it at a higher level.'\r\n    )\r\n  }\r\n\r\n  const getBlockNumber = useGetBlockNumber()\r\n  const { wallet } = walletContext\r\n\r\n  return useMemo(() => {\r\n    return { ...wallet, getBlockNumber }\r\n  }, [getBlockNumber, wallet])\r\n}\r\n\r\nfunction useGetBlockNumber(): () => number | null {\r\n  const walletContext = useContext(UseWalletContext)\r\n  const [blockNumber, setBlockNumber] = useState<number | null>(null)\r\n  const requestedBlockNumber = useRef<boolean>(false)\r\n\r\n  const getBlockNumber = useCallback<() => number | null>(() => {\r\n    if (walletContext === null) {\r\n      return null\r\n    }\r\n\r\n    requestedBlockNumber.current = true\r\n    walletContext.addBlockNumberListener(setBlockNumber)\r\n\r\n    return blockNumber\r\n  }, [walletContext, blockNumber])\r\n\r\n  useEffect(() => {\r\n    if (!requestedBlockNumber.current || walletContext === null) {\r\n      return\r\n    }\r\n\r\n    walletContext.addBlockNumberListener(setBlockNumber)\r\n    return () => {\r\n      walletContext.removeBlockNumberListener(setBlockNumber)\r\n    }\r\n  }, [requestedBlockNumber, walletContext])\r\n\r\n  return getBlockNumber\r\n}\r\n\r\n// CONTEXT PROVIDER ============================================================\r\n\r\ntype UseWalletProviderProps = {\r\n  children: ReactNode\r\n  connectors: { [key: string]: Connector | ConnectorConfig }\r\n  autoConnect: boolean\r\n  pollBalanceInterval: number\r\n  pollBlockNumberInterval: number\r\n}\r\n\r\nUseWalletProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  connectors: PropTypes.objectOf(PropTypes.object),\r\n  autoConnect: PropTypes.bool,\r\n  pollBalanceInterval: PropTypes.number,\r\n  pollBlockNumberInterval: PropTypes.number,\r\n}\r\n\r\nUseWalletProvider.defaultProps = {\r\n  connectors: {},\r\n  autoConnect: false,\r\n  pollBalanceInterval: 2000,\r\n  pollBlockNumberInterval: 5000,\r\n}\r\n\r\nfunction UseWalletProvider({\r\n  children,\r\n  // connectors contains init functions and/or connector configs.\r\n  connectors: connectorsInitsOrConfigs,\r\n  autoConnect,\r\n  pollBalanceInterval,\r\n  pollBlockNumberInterval,\r\n}: UseWalletProviderProps) {\r\n  const walletContext = useContext(UseWalletContext)\r\n\r\n  if (walletContext !== null) {\r\n    throw new Error('<UseWalletProvider /> has already been declared.')\r\n  }\r\n\r\n  const [connector, setConnector] = useState<string | null>(null)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [type, setType] = useState<AccountType | null>(null)\r\n  const [status, setStatus] = useState<Status>('disconnected')\r\n  const web3ReactContext = useWeb3React()\r\n  const activationId = useRef<number>(0)\r\n  const {\r\n    account,\r\n    chainId: web3ChainId,\r\n    library: ethereum,\r\n    error: web3Error,\r\n  } = web3ReactContext\r\n  const balance = useWalletBalance({ account, ethereum, pollBalanceInterval })\r\n  const { addBlockNumberListener, removeBlockNumberListener } =\r\n    useWatchBlockNumber({ ethereum, pollBlockNumberInterval })\r\n\r\n  // Combine the user-provided connectors with the default ones (see connectors.js).\r\n  const connectors = useMemo(\r\n    () => getConnectors(connectorsInitsOrConfigs),\r\n    [connectorsInitsOrConfigs]\r\n  )\r\n\r\n  const chainId = useMemo(\r\n    () => (web3ChainId ? web3ChainId : chains.getDefaultChainId()),\r\n    [web3ChainId]\r\n  )\r\n\r\n  const reset = useCallback(() => {\r\n    if (web3ReactContext.active) {\r\n      web3ReactContext.deactivate()\r\n    }\r\n    clearLastActiveAccount()\r\n    setConnector(null)\r\n    setError(null)\r\n    setStatus('disconnected')\r\n  }, [web3ReactContext])\r\n\r\n  // if the user switched networks on the wallet itself\r\n  // return unsupported error.\r\n  useMemo(() => {\r\n    if (web3Error instanceof UnsupportedChainIdError) {\r\n      setStatus('error')\r\n      setError(new ChainUnsupportedError(web3Error.message))\r\n    }\r\n  }, [web3Error])\r\n\r\n  const connect = useCallback(\r\n    async (connectorId = 'injected') => {\r\n      // Prevent race conditions between connections by using an external ID.\r\n      const id = ++activationId.current\r\n\r\n      reset()\r\n\r\n      // Check if another connection has happened right after deactivate().\r\n      if (id !== activationId.current) {\r\n        return\r\n      }\r\n\r\n      if (!connectors[connectorId]) {\r\n        setStatus('error')\r\n        setError(new ConnectorUnsupportedError(connectorId))\r\n        return\r\n      }\r\n\r\n      // If no connection happens, we're in the right context and can safely update\r\n      // the connection stage status\r\n      setStatus('connecting')\r\n\r\n      const [connectorInit, connectorConfig] = connectors[connectorId] || []\r\n\r\n      // Initialize the (useWallet) connector if it exists.\r\n      const connector = await connectorInit?.()\r\n\r\n      // Initialize the web3-react connector if it exists.\r\n      const web3ReactConnector = connector?.web3ReactConnector?.({\r\n        ...(connectorConfig || {}),\r\n      })\r\n\r\n      if (!web3ReactConnector) {\r\n        setStatus('error')\r\n        setError(new ConnectorUnsupportedError(connectorId))\r\n        return\r\n      }\r\n\r\n      try {\r\n        // TODO: there is no way to prevent an activation to complete, but we\r\n        // could reconnect to the last provider the user tried to connect to.\r\n        setConnector(connectorId)\r\n        await web3ReactContext.activate(web3ReactConnector, undefined, true)\r\n        setLastConnector(connectorId)\r\n        if (connectorId === 'injected') {\r\n          const account = await web3ReactConnector.getAccount()\r\n          account && setLastActiveAccount(account)\r\n          web3ReactConnector.getProvider().then((provider) => {\r\n            provider.on('accountsChanged', (accounts: string[]) => {\r\n              setLastActiveAccount(accounts[0])\r\n            })\r\n          })\r\n        }\r\n        setStatus('connected')\r\n      } catch (err) {\r\n        // Don’t throw if another connection has happened in the meantime.\r\n        if (id !== activationId.current) {\r\n          return\r\n        }\r\n\r\n        // If not, the error has been thrown during the current connection attempt,\r\n        // so it's correct to indicate that there has been an error\r\n        setConnector(null)\r\n        setStatus('error')\r\n\r\n        if (err instanceof UnsupportedChainIdError) {\r\n          setError(new ChainUnsupportedError(err.message))\r\n          return\r\n        }\r\n        // It might have thrown with an error known by the connector\r\n        if (connector.handleActivationError) {\r\n          const handledError = connector.handleActivationError(err as Error)\r\n          if (handledError) {\r\n            setError(handledError)\r\n            return\r\n          }\r\n        }\r\n        // Otherwise, set to state the received error\r\n        setError(err as Error)\r\n      }\r\n    },\r\n    [connectors, reset, web3ReactContext]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!autoConnect) {\r\n      return\r\n    }\r\n\r\n    const lastConnector = getLastConnector()\r\n    const lastActiveAccount = getLastActiveAccount()\r\n\r\n    if (lastActiveAccount && lastConnector === 'injected') {\r\n      const isInjectedAvailable = Object.keys(connectors).some(\r\n        (key) => key === 'injected'\r\n      )\r\n\r\n      if (isInjectedAvailable) {\r\n        connect()\r\n      }\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!account || !ethereum) {\r\n      return\r\n    }\r\n\r\n    let cancel = false\r\n\r\n    setType(null)\r\n\r\n    getAccountIsContract(ethereum, account).then((isContract) => {\r\n      if (!cancel) {\r\n        setStatus('connected')\r\n        setType(isContract ? 'contract' : 'normal')\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      cancel = true\r\n      setStatus('disconnected')\r\n      setType(null)\r\n    }\r\n  }, [account, ethereum])\r\n\r\n  const wallet = useMemo(\r\n    () => ({\r\n      _web3ReactContext: web3ReactContext,\r\n      account: account || null,\r\n      balance,\r\n      chainId,\r\n      connect,\r\n      connector,\r\n      connectors,\r\n      error,\r\n      ethereum,\r\n      isConnected: () => status === 'connected',\r\n      networkName: chains.getChainInformation(chainId).type,\r\n      providerInfo: connector\r\n        ? getProviderFromUseWalletId(connector)\r\n        : getProviderFromUseWalletId('unknown'),\r\n      reset,\r\n      status,\r\n      type,\r\n    }),\r\n    [\r\n      account,\r\n      balance,\r\n      chainId,\r\n      connect,\r\n      connector,\r\n      connectors,\r\n      error,\r\n      ethereum,\r\n      type,\r\n      reset,\r\n      status,\r\n      web3ReactContext,\r\n    ]\r\n  )\r\n\r\n  return (\r\n    <UseWalletContext.Provider\r\n      value={{\r\n        addBlockNumberListener,\r\n        pollBalanceInterval,\r\n        pollBlockNumberInterval,\r\n        removeBlockNumberListener,\r\n        wallet,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseWalletContext.Provider>\r\n  )\r\n}\r\n\r\nUseWalletProviderWrapper.propTypes = UseWalletProvider.propTypes\r\nUseWalletProviderWrapper.defaultProps = UseWalletProvider.defaultProps\r\n\r\nfunction UseWalletProviderWrapper(props: UseWalletProviderProps) {\r\n  return (\r\n    <Web3ReactProvider getLibrary={(ethereum) => ethereum}>\r\n      <UseWalletProvider {...props} />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport {\r\n  ConnectionRejectedError,\r\n  ChainUnsupportedError,\r\n  ConnectorUnsupportedError,\r\n  UseWalletProviderWrapper as UseWalletProvider,\r\n  useWallet,\r\n  getProviderString,\r\n  getProviderFromUseWalletId,\r\n  blockExplorerUrl,\r\n  getLastActiveAccount,\r\n  chains,\r\n}\r\n","import JSBI from 'jsbi'\r\nimport { useState, useEffect } from 'react'\r\nimport { Account, EthereumProvider, Balance } from '../types'\r\nimport { pollEvery, getAccountBalance } from '../utils'\r\n\r\nconst NO_BALANCE = '-1'\r\n\r\nexport function useWalletBalance({\r\n  account,\r\n  ethereum,\r\n  pollBalanceInterval,\r\n}: {\r\n  account?: Account | null\r\n  ethereum?: EthereumProvider\r\n  pollBalanceInterval: number\r\n}) {\r\n  const [balance, setBalance] = useState<Balance>(NO_BALANCE)\r\n\r\n  useEffect(() => {\r\n    if (!account || !ethereum) {\r\n      return\r\n    }\r\n\r\n    let cancel = false\r\n\r\n    // Poll wallet balance\r\n    const pollBalance = pollEvery<Balance, any>(\r\n      (\r\n        account: Account,\r\n        ethereum: EthereumProvider,\r\n        onUpdate: (balance: Balance) => void\r\n      ) => {\r\n        let lastBalance = NO_BALANCE\r\n        return {\r\n          async request() {\r\n            return getAccountBalance(ethereum, account)\r\n              .then((value) => {\r\n                return value ? JSBI.BigInt(value).toString() : NO_BALANCE\r\n              })\r\n              .catch(() => NO_BALANCE)\r\n          },\r\n          onResult(balance: Balance) {\r\n            if (!cancel && balance !== lastBalance) {\r\n              lastBalance = balance\r\n              onUpdate(balance)\r\n            }\r\n          },\r\n        }\r\n      },\r\n      pollBalanceInterval\r\n    )\r\n\r\n    // start polling balance every x time\r\n    const stopPollingBalance = pollBalance(account, ethereum, setBalance)\r\n\r\n    return () => {\r\n      cancel = true\r\n      stopPollingBalance()\r\n      setBalance(NO_BALANCE)\r\n    }\r\n  }, [account, ethereum, pollBalanceInterval])\r\n\r\n  return balance\r\n}\r\n","import JSBI from 'jsbi'\r\nimport { useRef, useCallback, useEffect } from 'react'\r\n\r\nimport { EthereumProvider } from '../types'\r\nimport { pollEvery, getBlockNumber } from '../utils'\r\n\r\n// Only watch block numbers, and return functions allowing to subscribe to it.\r\nexport function useWatchBlockNumber({\r\n  ethereum,\r\n  pollBlockNumberInterval,\r\n}: {\r\n  ethereum: EthereumProvider\r\n  pollBlockNumberInterval: number\r\n}) {\r\n  const lastBlockNumber = useRef<number | null>(null)\r\n\r\n  // Using listeners lets useWallet() decide if it wants to expose the block\r\n  // number, which implies to re-render whenever the block number updates.\r\n  const blockNumberListeners = useRef<Set<(blockNumber: number) => void>>(\r\n    new Set()\r\n  )\r\n\r\n  const addBlockNumberListener = useCallback((cb) => {\r\n    if (blockNumberListeners.current.has(cb)) {\r\n      return\r\n    }\r\n\r\n    // Immediately send the block number to the new listener\r\n    cb(lastBlockNumber.current)\r\n\r\n    // Add the listener\r\n    blockNumberListeners.current.add(cb)\r\n  }, [])\r\n\r\n  const removeBlockNumberListener = useCallback((cb) => {\r\n    blockNumberListeners.current.delete(cb)\r\n  }, [])\r\n\r\n  // Update the block number and broadcast it to the listeners\r\n  const updateBlockNumber = useCallback((blockNumber) => {\r\n    if (lastBlockNumber.current === blockNumber) {\r\n      return\r\n    }\r\n\r\n    lastBlockNumber.current = blockNumber\r\n    blockNumberListeners.current.forEach((cb) => cb(blockNumber))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!ethereum) {\r\n      updateBlockNumber(null)\r\n      return\r\n    }\r\n\r\n    let cancel = false\r\n\r\n    const pollBlockNumber = pollEvery(() => {\r\n      return {\r\n        request: () => getBlockNumber(ethereum),\r\n        onResult: (latestBlockNumber: number) => {\r\n          if (!cancel) {\r\n            updateBlockNumber(\r\n              latestBlockNumber === null\r\n                ? null\r\n                : JSBI.BigInt(latestBlockNumber).toString()\r\n            )\r\n          }\r\n        },\r\n      }\r\n    }, pollBlockNumberInterval)\r\n\r\n    const stopPollingBlockNumber = pollBlockNumber()\r\n\r\n    return () => {\r\n      cancel = true\r\n      stopPollingBlockNumber()\r\n    }\r\n  }, [ethereum, pollBlockNumberInterval, updateBlockNumber])\r\n\r\n  return { addBlockNumberListener, removeBlockNumberListener }\r\n}\r\n","import { ConnectorConfig, ConnectorInit } from './types'\r\nimport initFortmatic from './connectors/ConnectorFortmatic'\r\nimport initFrame from './connectors/ConnectorFrame'\r\nimport initInjected from './connectors/ConnectorInjected'\r\nimport initPortis from './connectors/ConnectorPortis'\r\nimport initProvided from './connectors/ConnectorProvided'\r\nimport initTorus from './connectors/ConnectorTorus'\r\nimport initWalletConnect from './connectors/ConnectorWalletConnect'\r\nimport initWalletLink from './connectors/ConnectorWalletLink'\r\nimport initLedger from './connectors/ConnectorLedger'\r\n\r\nexport function getConnectors(\r\n  initsOrConfigs: { [key: string]: ConnectorInit | ConnectorConfig } = {}\r\n) {\r\n  const connectors: {\r\n    [key: string]: [ConnectorInit, ConnectorConfig | null]\r\n  } = {\r\n    fortmatic: [initFortmatic, null],\r\n    frame: [initFrame, null],\r\n    injected: [initInjected, null],\r\n    portis: [initPortis, null],\r\n    provided: [initProvided, null],\r\n    torus: [initTorus, null],\r\n    walletconnect: [initWalletConnect, null],\r\n    walletlink: [initWalletLink, null],\r\n    ledger: [initLedger, null],\r\n  }\r\n\r\n  for (const [id, initOrConfig] of Object.entries(initsOrConfigs)) {\r\n    // If initOrConfig is a function, it is an initializer.\r\n    if (typeof initOrConfig === 'function') {\r\n      connectors[id] = [initOrConfig as ConnectorInit, null]\r\n      continue\r\n    }\r\n\r\n    // Otherwise it is a config\r\n    if (connectors[id]) {\r\n      connectors[id][1] = initOrConfig as ConnectorConfig\r\n    }\r\n  }\r\n\r\n  return connectors\r\n}\r\n"],"names":["ChainUnsupportedError","message","params","_this","name","_inheritsLoose","Error","ChainUnknownError","_this2","ConnectorUnsupportedError","connectorId","_this3","ConnectionRejectedError","_this4","ConnectorConfigError","_this5","init","_init","_context","FortmaticConnector","web3ReactConnector","chainId","apiKey","FrameConnector","_yield$import","UserRejectedRequestError","supportedChainIds","handleActivationError","err","startsWith","InjectedConnector","PortisConnector","dAppId","networks","ProvidedConnector","provider","TorusConnector","constructorOptions","initOptions","WalletConnectConnector","rpc","bridge","pollingInterval","Object","values","forEach","url","test","qrcode","WalletLinkConnector","appName","appLogoUrl","LedgerConnector","baseDerivationPath","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ETH","symbol","decimals","MATIC","AVAX","ONE","BNB","TT","CELO","METIS","FTM","EVMOS","CHAIN_INFORMATION","Map","id","nativeCurrency","fullName","shortName","explorerUrl","testnet","getChainInformation","chainInfo","get","getKnownChainsIds","Array","from","has","EXPLORER_URL_TYPES","rpcResult","response","isUnwrappedRpcResult","ethereumRequest","_ethereumRequest","ethereum","request","_context2","sendAsync","selectedAddress","jsonrpc","send","_getAccountIsContract","account","_context3","getAccountBalance","_getAccountBalance","_getBlockNumber","pollEvery","delay","timer","poll","onResult","setTimeout","bind","clearTimeout","setLastActiveAccount","localStorage","_localStorage","setItem","getLastActiveAccount","_localStorage3","getItem","setLastConnector","connector","_localStorage4","img","require","PROVIDERS","image","Images","strings","your Ethereum wallet","map","getProvider","providerId","getProviderFromUseWalletId","window","navigator","userAgent","indexOf","isMetaMask","UseWalletContext","React","UseWalletProvider","children","connectorsInitsOrConfigs","connectors","autoConnect","pollBalanceInterval","pollBlockNumberInterval","useContext","useState","setConnector","setError","setType","status","setStatus","web3ReactContext","useWeb3React","activationId","useRef","web3ChainId","library","web3Error","balance","setBalance","useEffect","cancel","stopPollingBalance","onUpdate","lastBalance","JSBI","BigInt","toString","pollBalance","useWalletBalance","lastBlockNumber","blockNumberListeners","Set","addBlockNumberListener","useCallback","cb","current","add","removeBlockNumberListener","updateBlockNumber","blockNumber","stopPollingBlockNumber","getBlockNumber","latestBlockNumber","pollBlockNumber","useWatchBlockNumber","useMemo","initsOrConfigs","fortmatic","initFortmatic","frame","initFrame","injected","initInjected","portis","initPortis","provided","initProvided","torus","initTorus","walletconnect","initWalletConnect","walletlink","initWalletLink","ledger","initLedger","entries","initOrConfig","getConnectors","active","deactivate","_localStorage2","removeItem","UnsupportedChainIdError","connect","connectorInit","_ref3","connectorConfig","activate","getAccount","on","accounts","handledError","lastConnector","_localStorage5","some","getAccountIsContract","isContract","wallet","_web3ReactContext","isConnected","networkName","chains","providerInfo","Provider","UseWalletProviderWrapper","props","Web3ReactProvider","getLibrary","propTypes","PropTypes","defaultProps","includes","string","walletContext","setBlockNumber","requestedBlockNumber","useGetBlockNumber"],"mappings":"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SACXC,6CACAC,SAAS,IAGb,CACE,IACA,CACEL,GAAI,IACJC,eAAgBL,EAChB/G,KAAM,SACNqH,SAAU,uBACVC,UAAW,MACXC,mCACAC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eAAgBL,EAChB/G,KAAM,SACNqH,SAAU,uBACVC,UAAW,MACXC,2CACAC,SAAS,IAGb,CACE,IACA,CACEL,GAAI,IACJC,eAAgBJ,EAChBhH,KAAM,QACNqH,SAAU,gBACVC,UAAW,QACXC,4CACAC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eAAgBJ,EAChBhH,KAAM,QACNqH,SAAU,gBACVC,UAAW,QACXC,4CACAC,SAAS,IAGb,CACE,QACA,CACEL,GAAI,QACJC,eAAgBV,EAChB1G,KAAM,UACNqH,SAAU,cACVC,UAAW,UACXC,4CACAC,SAAS,IAGb,CACE,QACA,CACEL,GAAI,QACJC,eAAgBV,EAChB1G,KAAM,cACNqH,SAAU,sBACVC,UAAW,kBACXC,oDACAC,SAAS,IAGb,CACE,GACA,CACEL,GAAI,GACJC,eAAgBT,EAChB3G,KAAM,MACNqH,SAAU,sBACVC,UAAW,MACXC,mCACAC,SAAS,IAGb,CACE,GACA,CACEL,GAAI,GACJC,eAAgBT,EAChB3G,KAAM,UACNqH,SAAU,8BACVC,UAAW,cACXC,2CACAC,SAAS,IAGb,CACE,IACA,CACEL,GAAI,IACJC,eAAgBR,EAChB5G,KAAM,cACNqH,SAAU,sBACVC,UAAW,cACXC,4CACAC,SAAS,IAGb,CACE,GACA,CACEL,GAAI,GACJC,eAAgBR,EAChB5G,KAAM,kBACNqH,SAAU,sBACVC,UAAW,sBACXC,oDACAC,SAAS,IAGb,CACE,OACA,CACEL,GAAI,OACJC,eAAgBf,EAChBrG,KAAM,eACNqH,SAAU,mBACVC,UAAW,mBACXC,YAAa,+BACbC,SAAS,IAGb,CACE,MACA,CACEL,GAAI,MACJC,eAAgBf,EAChBrG,KAAM,WACNqH,SAAU,mBACVC,UAAW,WACXC,YAAa,uBACbC,SAAS,IAGb,CACE,MACA,CACEL,GAAI,MACJC,eAAgBP,EAChB7G,KAAM,OACNqH,SAAU,iBACVC,UAAW,OACXC,YAAa,6BACbC,SAAS,IAGb,CACE,MACA,CACEL,GAAI,MACJC,eAAgBP,EAChB7G,KAAM,WACNqH,SAAU,2BACVC,UAAW,YACXC,YAAa,iDACbC,SAAS,IAGb,CACE,IACA,CACEL,GAAI,IACJC,eAAgBN,EAChB9G,KAAM,WACNqH,SAAU,yBACVC,UAAW,WACXC,YAAa,sCACbC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eAAgBN,EAChB9G,KAAM,YACNqH,SAAU,kBACVC,UAAW,YACXC,YAAa,uCACbC,SAAS,IAGb,CACE,WACA,CACEL,GAAI,WACJC,eAAgBf,EAChBrG,KAAM,SACNqH,SAAU,iBACVC,UAAW,aACXC,YAAa,uCACbC,SAAS,IAGb,CACE,WACA,CACEL,GAAI,WACJC,eAAgBf,EAChBrG,KAAM,SACNqH,SAAU,iBACVC,UAAW,SACXC,YAAa,uCACbC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eA1XgB,CACpB3M,KAAM,MACN6L,OAAQ,MACRC,SAAU,IAwXNvG,KAAM,WACNqH,SAAU,WACVC,UAAW,oBACXC,YAAa,gCACbC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eAjYiB,CACrB3M,KAAM,YACN6L,OAAQ,OACRC,SAAU,IA+XNvG,KAAM,YACNqH,SAAU,YACVC,UAAW,YACXC,YAAa,iCACbC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJC,eAxYiB,CACrB3M,KAAM,UACN6L,OAAQ,OACRC,SAAU,IAsYNvG,KAAM,WACNqH,SAAU,WACVC,UAAW,WACXC,YAAa,gCACbC,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJnH,KAAM,QACNwH,SAAS,IAGb,CACE,KACA,CACEL,GAAI,KACJnH,KAAM,UACNwH,SAAS,IAGb,CACE,IACA,CACEL,GAAI,IACJC,eA/ZiB,CACrB3M,KAAM,OACN6L,OAAQ,KACRC,SAAU,IA6ZNvG,KAAM,OACNqH,SAAU,eACVC,UAAW,OACXC,oCACAC,SAAS,IAGb,CACE,MACA,CACEL,GAAI,MACJC,eAAgBf,EAChBrG,KAAM,OACNqH,SAAU,WACVC,UAAW,WACXC,mCACAC,SAAS,IAGb,CACE,OACA,CACEL,GAAI,OACJC,eAAgBf,EAChBrG,KAAM,UACNqH,SAAU,0BACVC,UAAW,WACXC,0CACAC,SAAS,IAGb,CACE,SACA,CACEL,GAAI,SACJC,eAAgBf,EAChBrG,KAAM,UACNqH,SAAU,kBACVC,UAAW,UACXC,4CACAC,SAAS,eAqBCC,EACd/L,GAEA,IAAMgM,EAAYT,EAAkBU,IAAIjM,GACxC,IAAKgM,EAAW,MAAM,IAAI9M,uBAAuCc,GACjE,OAAOgM,EAQT,SAAgBE,IACd,OAAOC,MAAMC,KAAKb,EAAkBxC,oDAxBT/I,GAC3B,OAAOuL,EAAkBc,IAAIrM,uEAgC/B,WACE,OAAOmM,MAAMC,KAAKb,EAAkBhK,6BAGtC,WACE,OAAO,IC3jBH+K,EAAqB,IAAId,IAAI,CACjC,CAAC,QAAS,SACV,CAAC,cAAe,MAChB,CAAC,UAAW,WACZ,CAAC,QAAS,oBAqBIe,GAAUC,GAExB,GApCF,SAA8BA,GAI5B,MACsB,iBAAbA,GAAsC,OAAbA,GAAqB,YAAaA,EA+BhEC,CAAqBD,GAAW,CAClC,GAAIA,EAASxG,MACX,MAAM,IAAI/G,MAAMuN,EAASxG,OAE3B,OAAOwG,EAAS5G,QAAU,KAG5B,OAAO4G,GAAY,KACpB,SAEcE,UAAe,gCAAA,cAyC7B,OAzC6BC,eAA9B,WACEC,EACA1H,EACArG,GAAgB,6BAAA,6BAAA,OAAA,IAGZ+N,EAASC,SAAOC,SAAA,MAAA,yBACXF,EAASC,QAAQ,CAAE3H,OAAAA,EAAQrG,OAAAA,IAAUiH,KAAKyG,KAAU,OAAA,IAIzDK,EAASG,YAAaH,EAASI,iBAAeF,SAAA,MAAA,yBACzC,IAAIjE,SAAQ,SAACrD,EAASC,GAC3BmH,EAASG,UACP,CACE7H,OAAAA,EACArG,OAAAA,EACAuN,KAAMQ,EAASI,gBACfC,QAAS,MACTxB,GAAI,IAEN,SAAClL,EAAYqF,GACPrF,EACFkF,EAAOlF,GAEPiF,EAAQI,SAIbE,KAAKyG,KAAU,OAAA,IAKhBK,EAASM,MAAIJ,SAAA,MAAA,yBACRF,EAASM,KAAKhI,EAAQrG,GAAQiH,KAAKyG,KAAU,OAAA,MAGhD,IAAItN,MACR,mEACD,OAAA,UAAA,iDAaF,cAAA,OAAAkO,eAVM,WACLP,EACAQ,GAAgB,6BAAA,6BAAA,OAAA,OAAAC,SAAAA,SAGKX,GAAgBE,EAAU,cAAe,CAACQ,IAAS,OAA5D,yBACM,eAAI,OAAA,OAAAC,SAAAA,mCAEb,GAAK,QAAA,UAAA,uEAIMC,QAAiB,gCAKtC,cAAA,OAAAC,eALM,WACLX,EACAQ,GAAgB,6BAAA,6BAAA,OAAA,yBAETV,GAAgBE,EAAU,iBAAkB,CAACQ,EAAS,YAAU,OAAA,UAAA,iDAKxE,cAAA,OAAAI,eAFM,WAA8BZ,GAA0B,6BAAA,6BAAA,OAAA,yBACtDF,GAAgBE,EAAU,kBAAmB,KAAG,OAAA,UAAA,0DAGzCa,GACdrJ,EASAsJ,GAEA,IAAIC,EACAnE,GAAO,EACLoE,aAAI,kBAAG,WACXf,EACAgB,GAA6B,MAAA,6BAAA,6BAAA,OAAA,OAAAhO,SAERgN,IAAS,OAAxBjH,SACD4D,IACHqE,EAASjI,GACT+H,EAAQG,WAAWF,EAAKG,KAAK,KAAMlB,EAASgB,GAAWH,IACxD,OAAA,UAAA,0BACF,qBATS,mCAUV,OAAO,WACL,MAA8BtJ,0BAAtByI,IAAAA,QAASgB,IAAAA,SAGjB,OAFArE,GAAO,EACPoE,EAAKf,EAASgB,GACP,WACLrE,GAAO,EACPwE,aAAaL,KAKnB,IAGaM,GAAuB,SAACb,kBACnCc,eAAAC,EAAcC,QAJI,sBAIiBhB,IAOxBiB,GAAuB,iBAClC,gBAAOH,qBAAAI,EAAcC,QAZH,wBAePC,GAAmB,SAACC,kBAC/BP,eAAAQ,EAAcN,QAfM,wBAeiBK,ICtKvC,MAAME,GAAMC,QAAQ,gBCAdD,GAAMC,QAAQ,mBCAdD,GAAMC,QAAQ,eCAdD,GAAMC,QAAQ,kBCAdD,GAAMC,QAAQ,gBCAdD,GAAMC,QAAQ,gBCAdD,GAAMC,QAAQ,gBCAdD,GAAMC,QAAQ,uBCmBpB,IAAMC,GAAY,IAAIrD,IACpB,CACE,CACEC,GAAI,QACJ1M,KAAM,QACNuF,KAAM,UACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,UAG5B,CACExD,GAAI,WACJ1M,KAAM,WACNuF,KAAM,UACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,aAG5B,CACExD,GAAI,SACJ1M,KAAM,SACNuF,KAAM,SACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,WAG5B,CACExD,GAAI,SACJ1M,KAAM,SACNuF,KAAM,SACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,WAG5B,CACExD,GAAI,YACJ1M,KAAM,YACNuF,KAAM,MACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,cAG5B,CACExD,GAAI,SACJ1M,KAAM,SACNuF,KAAM,MACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,WAG5B,CACExD,GAAI,gBACJ1M,KAAM,gBACNuF,KAAM,MACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,kBAG5B,CACExD,GAAI,UACJ1M,KAAM,UACNuF,KAAM,UACNwK,MAAOC,GACPC,QAAS,CACPC,uBAAwB,iBAG5BC,KAAI,SAACpO,GAAQ,MAAK,CAACA,EAAS2K,GAAI3K,OAIpC,SAASqO,GAAYC,GACnB,OAAOP,GAAU5C,IAAImD,GAsBvB,SAASC,GAA2B5D,GAClC,MAAW,aAAPA,GAA4B,aAAPA,EAErB0D,IAdoBrO,EAcSwO,OAAO1C,WA/GjB,iBAAd2C,WACwB,iBAAxBA,UAAUC,WACjBD,UAAUC,UAAUC,QAAQ,aAAe,EAiGpC,QAEL3O,GAAYA,EAAS4O,WAChB,WAEF,YAO+CP,GAAY,WAG3DA,GAAY1D,IAAO0D,GAAY,WAjBxC,IAA0BrO,ECrD1B,IAAM6O,GAAmBC,gBAAmC,MA6E5D,SAASC,UACPC,IAAAA,SAEYC,IAAZC,WACAC,IAAAA,YACAC,IAAAA,oBACAC,IAAAA,wBAIA,GAAsB,OAFAC,aAAWT,IAG/B,MAAM,IAAI1Q,MAAM,oDAGlB,MAAkCoR,WAAwB,MAAnD5B,OAAW6B,SACQD,WAAuB,MAA1CrK,OAAOuK,SACUF,WAA6B,MAA9C/L,OAAMkM,SACeH,WAAiB,gBAAtCI,OAAQC,OACTC,EAAmBC,iBACnBC,EAAeC,SAAe,GAElC1D,EAIEuD,EAJFvD,QACS2D,EAGPJ,EAHF3Q,QACS4M,EAEP+D,EAFFK,QACOC,EACLN,EADF3K,MAEIkL,kBCvJN9D,IAAAA,QACAR,IAAAA,SACAsD,IAAAA,sBAM8BG,WAXb,MAWVa,OAASC,OA8ChB,OA5CAC,aAAU,WACR,GAAKhE,GAAYR,EAAjB,CAIA,IAAIyE,GAAS,EA8BPC,EA3Bc7D,IAClB,SACEL,EACAR,EACA2E,GAEA,IAAIC,EA3BO,KA4BX,MAAO,CACC3E,6IACGS,GAAkBV,EAAUQ,GAChCtH,MAAK,SAACnD,GACL,OAAOA,EAAQ8O,EAAKC,OAAO/O,GAAOgP,WAhC/B,eAkCE,WAAA,MAlCF,SAkCmB,OAAA,UAAA,6BAE5B9D,kBAASqD,GACFG,GAAUH,IAAYM,IACzBA,EAAcN,EACdK,EAASL,QAKjBhB,EAIyB0B,CAAYxE,EAASR,EAAUuE,GAE1D,OAAO,WACLE,GAAS,EACTC,IACAH,EArDa,UAuDd,CAAC/D,EAASR,EAAUsD,IAEhBgB,EDiGSW,CAAiB,CAAEzE,QAAAA,EAASR,SAAAA,EAAUsD,oBAAAA,sBEvJtDtD,IAAAA,SACAuD,IAAAA,wBAKM2B,EAAkBhB,SAAsB,MAIxCiB,EAAuBjB,SAC3B,IAAIkB,KAGAC,EAAyBC,eAAY,SAACC,GACtCJ,EAAqBK,QAAQ/F,IAAI8F,KAKrCA,EAAGL,EAAgBM,SAGnBL,EAAqBK,QAAQC,IAAIF,MAChC,IAEGG,EAA4BJ,eAAY,SAACC,GAC7CJ,EAAqBK,eAAeD,KACnC,IAGGI,EAAoBL,eAAY,SAACM,GACjCV,EAAgBM,UAAYI,IAIhCV,EAAgBM,QAAUI,EAC1BT,EAAqBK,QAAQ5Q,SAAQ,SAAC2Q,GAAE,OAAKA,EAAGK,SAC/C,IAiCH,OA/BApB,aAAU,WACR,GAAKxE,EAAL,CAKA,IAAIyE,GAAS,EAiBPoB,EAfkBhF,IAAU,WAChC,MAAO,CACLZ,QAAS,WAAA,mBZqDmB,gCYrDb6F,CAAe9F,IAC9BiB,SAAU,SAAC8E,GACJtB,GACHkB,EACwB,OAAtBI,EACI,KACAlB,EAAKC,OAAOiB,GAAmBhB,gBAK1CxB,EAE4ByC,GAE/B,OAAO,WACLvB,GAAS,EACToB,KAzBAF,EAAkB,QA2BnB,CAAC3F,EAAUuD,EAAyBoC,IAEhC,CAAEN,uBAAAA,EAAwBK,0BAAAA,GFkF/BO,CAAoB,CAAEjG,SAAAA,EAAUuD,wBAAAA,IAD1B8B,IAAAA,uBAAwBK,IAAAA,0BAI1BtC,EAAa8C,WACjB,WAAA,gBGzJFC,YAAAA,IAAAA,EAAqE,IAgBrE,IAdA,IAAM/C,EAEF,CACFgD,UAAW,CAACC,EAAe,MAC3BC,MAAO,CAACC,EAAW,MACnBC,SAAU,CAACC,EAAc,MACzBC,OAAQ,CAACC,EAAY,MACrBC,SAAU,CAACC,EAAc,MACzBC,MAAO,CAACC,EAAW,MACnBC,cAAe,CAACC,EAAmB,MACnCC,WAAY,CAACC,EAAgB,MAC7BC,OAAQ,CAACC,EAAY,aAGU3S,OAAO4S,QAAQnB,kBAAiB,CAA5D,WAAOtH,OAAI0I,OAEc,mBAAjBA,EAMPnE,EAAWvE,KACbuE,EAAWvE,GAAI,GAAK0I,GANpBnE,EAAWvE,GAAM,CAAC0I,EAA+B,MAUrD,OAAOnE,EH4HCoE,CAAcrE,KACpB,CAACA,IAGG/P,EAAU8S,WACd,WAAA,OAAO/B,GX6ZF,IW5ZL,CAACA,IAGGnJ,EAAQsK,eAAY,WVjBU,MUkB9BvB,EAAiB0D,QACnB1D,EAAiB2D,sBVlBrBpG,eAAAqG,EAAcC,WARI,uBU6BhBlE,EAAa,MACbC,EAAS,MACTG,EAAU,kBACT,CAACC,IAIJmC,WAAQ,WACF7B,aAAqBwD,4BACvB/D,EAAU,SACVH,EAAS,IAAI5R,EAAsBsS,EAAUrS,aAE9C,CAACqS,IAEJ,IAAMyD,EAAUxC,yBAAW,kBACzB,WAAO7S,GAAW,oBAAA,6BAAA,6BAAA,OAMhB,YANKA,IAAAA,EAAc,YAEboM,IAAOoF,EAAauB,QAE1BxK,IAGI6D,IAAOoF,EAAauB,SAAOvS,SAAA,MAAA,0BAAA,OAAA,GAI1BmQ,EAAW3Q,IAAYQ,SAAA,MAE0B,OADpD6Q,EAAU,SACVH,EAAS,IAAInR,EAA0BC,uBAAa,OAUtD,OAJAqR,EAAU,cAEHiE,GAFgBC,EAEkB5E,EAAW3Q,IAAgB,OAA9CwV,OAEtBhV,gBACwB8U,SAAAA,IAAiB,QAKvC,GAFI5U,SAHA0O,iBAGqBA,EAAW1O,0BAAX0O,EAAW1O,wBAChC8U,GAAmB,MAGFhV,UAAA,MAE+B,OADpD6Q,EAAU,SACVH,EAAS,IAAInR,EAA0BC,uBAAa,QAO3B,OAP2BQ,UAOpDyQ,EAAajR,GAAYQ,UACnB8Q,EAAiBmE,SAAS/U,OAAoBmG,GAAW,GAAK,QACvC,GAA7BsI,GAAiBnP,GACG,aAAhBA,GAA0BQ,UAAA,MAAA,OAAAA,UACNE,EAAmBgV,aAAY,SAA/C3H,WACKa,GAAqBb,GAChCrN,EAAmBoP,cAAcrJ,MAAK,SAAChF,GACrCA,EAASkU,GAAG,mBAAmB,SAACC,GAC9BhH,GAAqBgH,EAAS,UAEhC,QAEJvE,EAAU,aAAY7Q,UAAA,MAAA,QAAA,GAAAA,UAAAA,iBAGlB4L,IAAOoF,EAAauB,SAAOvS,UAAA,MAAA,0BAAA,QAOb,GADlByQ,EAAa,MACbI,EAAU,WAEN7Q,gBAAe4U,4BAAuB5U,UAAA,MACQ,OAAhD0Q,EAAS,IAAI5R,EAAsBkB,KAAIjB,6BAAS,QAAA,IAI9C6P,EAAUnO,uBAAqBT,UAAA,MACiC,KAA5DqV,EAAezG,EAAUnO,8BACfT,UAAA,MACQ,OAAtB0Q,EAAS2E,sBAAa,QAK1B3E,QAAsB,QAAA,UAAA,yCAEzB,mBAAA,mCACD,CAACP,EAAYpI,EAAO+I,IAGtBS,aAAU,WACR,GAAKnB,EAAL,CAIA,MAAMkF,WVhHDjH,qBAAAkH,EAAc7G,QAnBD,yBUoIQF,MAEiB,aAAlB8G,GACK7T,OAAOyH,KAAKiH,GAAYqF,MAClD,SAAC5S,GAAG,MAAa,aAARA,MAITiS,OAKH,IAEHtD,aAAU,WACR,GAAKhE,GAAYR,EAAjB,CAIA,IAAIyE,GAAS,EAWb,OATAb,EAAQ,oBVrN8B,gCUuNtC8E,CAAqB1I,EAAUQ,GAAStH,MAAK,SAACyP,GACvClE,IACHX,EAAU,aACVF,EAAQ+E,EAAa,WAAa,cAI/B,WACLlE,GAAS,EACTX,EAAU,gBACVF,EAAQ,UAET,CAACpD,EAASR,IAEb,IAAM4I,EAAS1C,WACb,WAAA,MAAO,CACL2C,kBAAmB9E,EACnBvD,QAASA,GAAW,KACpB8D,QAAAA,EACAlR,QAAAA,EACA0U,QAAAA,EACAjG,UAAAA,EACAuB,WAAAA,EACAhK,MAAAA,EACA4G,SAAAA,EACA8I,YAAa,WAAA,MAAiB,cAAXjF,GACnBkF,YAAaC,EAA2B5V,GAASsE,KACjDuR,aACIxG,GADUZ,GAEiB,WAC/B7G,MAAAA,EACA6I,OAAAA,EACAnM,KAAAA,KAEF,CACE8I,EACA8D,EACAlR,EACA0U,EACAjG,EACAuB,EACAhK,EACA4G,EACAtI,EACAsD,EACA6I,EACAE,IAIJ,OACEf,gBAACD,GAAiBmG,UAChBnT,MAAO,CACLsP,uBAAAA,EACA/B,oBAAAA,EACAC,wBAAAA,EACAmC,0BAAAA,EACAkD,OAAAA,IAGD1F,GAQP,SAASiG,GAAyBC,GAChC,OACEpG,gBAACqG,qBAAkBC,WAAY,SAACtJ,GAAQ,OAAKA,IAC3CgD,gBAACC,oBAAsBmG,KApQ7BnG,GAAkBsG,UAAY,CAC5BrG,SAAUsG,OACVpG,WAAYoG,WAAmBA,UAC/BnG,YAAamG,OACblG,oBAAqBkG,SACrBjG,wBAAyBiG,UAG3BvG,GAAkBwG,aAAe,CAC/BrG,WAAY,GACZC,aAAa,EACbC,oBAAqB,IACrBC,wBAAyB,KAkP3B4F,GAAyBI,UAAYtG,GAAkBsG,UACvDJ,GAAyBM,aAAexG,GAAkBwG,yKVlW1B,SAC9B/R,EACA3B,EACA3C,GAEA,IAAKkM,IAAoBoK,SAAStW,GAChC,MAAO,GAGT,IAAKsM,EAAmBD,IAAI/H,GAC1B,MAAM,IAAIrF,MAAM,uBAKlB,OAFgB8M,EAAoB/L,GAA8B6L,gBACjDS,EAAmBL,IAAI3H,OACR3B,oHSqElC,SAA2B4T,EAAgBnH,YAAAA,IAAAA,EAAa,WACtD,IAAMtO,EAAWqO,GAAYC,GAC7B,OAAQtO,GAAYA,EAASkO,QAAQuH,IAAYA,qBC7CnD,WACE,IAAMC,EAAgBpG,aAAWT,IAEjC,GAAsB,OAAlB6G,EACF,MAAM,IAAIvX,MACR,sGAKJ,IAAMyT,EAQR,WACE,IAAM8D,EAAgBpG,aAAWT,MACKU,WAAwB,MAAvDmC,OAAaiE,OACdC,EAAuB5F,UAAgB,GAEvC4B,EAAiBR,eAAiC,WACtD,OAAsB,OAAlBsE,EACK,MAGTE,EAAqBtE,SAAU,EAC/BoE,EAAcvE,uBAAuBwE,GAE9BjE,KACN,CAACgE,EAAehE,IAanB,OAXApB,aAAU,WACR,GAAKsF,EAAqBtE,SAA6B,OAAlBoE,EAKrC,OADAA,EAAcvE,uBAAuBwE,GAC9B,WACLD,EAAclE,0BAA0BmE,MAEzC,CAACC,EAAsBF,IAEnB9D,EAnCgBiE,GACfnB,EAAWgB,EAAXhB,OAER,OAAO1C,WAAQ,WACb,YAAY0C,GAAQ9C,eAAAA,MACnB,CAACA,EAAgB8C"}